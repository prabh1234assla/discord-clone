// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  Id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  servers   Server[]
  members   Member[]
  channels  Channel[]
}

model Server {
  Id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  userId    String
  user      User      @relation(fields: [userId], references: [Id], onDelete: Cascade)

  members   Member[]
  channels  Channel[]

  @@index([userId])
}

enum Roles {
  ADMIN
  MODERATOR
  MEMBER
}

model Member {
  memberId  String   @id @default(uuid())
  role      Roles    @default(MEMBER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    String
  user      User     @relation(fields: [userId], references: [Id], onDelete: Cascade)

  serverId  String   @default(uuid())
  server    Server   @relation(fields: [serverId], references: [Id], onDelete: Cascade)

  @@index([userId])
  @@index([serverId])
}

enum ChannelTypes {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  Id        String       @id @default(uuid())
  name      String       @unique
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt

  type      ChannelTypes @default(TEXT)

  userId    String
  user      User         @relation(fields: [userId], references: [Id], onDelete: Cascade)
  
  serverId  String       @default(uuid())
  server    Server       @relation(fields: [serverId], references: [Id], onDelete: Cascade)

  @@index([userId])
  @@index([serverId])
}
